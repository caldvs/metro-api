org: cdavies93
app: metro-api
service: metro-api
frameworkVersion: '3'
useDotenv: true

plugins:
  - serverless-plugin-typescript
  - serverless-dotenv-plugin

custom:
  bucket: first-and-last-trams-${opt:stage, self:provider.stage} #unique global name it will create for the bucket

Resources:
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ${self:custom.bucket} # Getting the name of table I defined under custom in serverless.yml
  # Make Bucket publicly accessable
  MyBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
        Bucket: !Ref Bucket
        PolicyDocument:
          Statement:
            - Effect: Allow
              Principal: '*' # public access to access the bucket files 
              Action: s3:*
              Resource: 'arn:aws:s3:::${self:custom.bucket}/*'

provider:
  name: aws
  runtime: nodejs14.x
  region: eu-west-2
  stage: dev
  environment:
    TFGM_KEY: ${env:TFGM_KEY}
    environment: ${opt:stage, self:provider.stage}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource: "arn:aws:s3:::${self:custom.bucket}"
    - Effect: "Allow"
      Action:
        - "cloudwatch:PutMetricData"
      Resource: "*"

functions:
  station:
    handler: handler.station
    events:
      - httpApi:
          path: /{stationId}
          method: get
  firstAndLast:
    handler: handler.firstAndLast
    events:
      - schedule: rate(10 minutes)
